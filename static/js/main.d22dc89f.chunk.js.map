{"version":3,"sources":["assets/logo.svg","assets/admin.svg","assets/cross.svg","components/ModalContainer.jsx","components/NavBar.jsx","assets/down-arrow.svg","assets/plus.svg","components/Layout.jsx","assets/edit.svg","components/TaskCard.jsx","components/Pages.jsx","App.jsx","index.jsx"],"names":["ModalHeader","styled","div","ModalContent","CloseButton","img","ModalContainer","children","isOpen","setOpen","header","open","center","onClose","closeOnOverlayClick","closeOnEsc","showCloseIcon","focusTrapped","styles","modal","padding","width","src","CrossSvg","onClick","Container","Logo","Login","button","Label","label","Error","emptyErrors","username","password","NavBar","loggedIn","logOut","logIn","useState","error","setError","to","LogoSvg","alt","AdminSvg","onSubmit","event","preventDefault","data","FormData","set","target","login","value","axios","post","then","result","status","message","token","name","type","Header","Content","Plus","Arrow","props","rotateArrow","Select","select","email","text","Layout","changeSortDirection","getTasks","sortField","setSortField","onChange","ArrowSvg","PlusSvg","form","done","User","Status","Edit","emptyError","TaskCard","isLoggedIn","updateCard","EditSvg","request","defaultValue","Pages","pageNumber","currentPage","Array","from","keys","map","number","GlobalStyle","createGlobalStyle","App","setLoggedIn","tasks","setTasks","sortDirection","setSortDirection","page","setPage","get","x","checkIfTokenExpired","Date","localStorage","getItem","useEffect","defaults","baseURL","clear","date","setDate","getDate","setItem","toString","task","id","sendUpdateRequest","Math","ceil","total_task_count","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d22dc89f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.47644d92.svg\";","export default __webpack_public_path__ + \"static/media/admin.9385f271.svg\";","export default __webpack_public_path__ + \"static/media/cross.47eb640c.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'react-responsive-modal';\nimport 'react-responsive-modal/styles.css';\nimport styled from 'styled-components';\nimport CrossSvg from '../assets/cross.svg';\n\nconst ModalHeader = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  justify-content: space-between;\n  line-height: 20px;\n  background-color: aquamarine;\n  padding: 10px;\n`;\n\nconst ModalContent = styled.div`\n  width: calc(100% - 20px);\n  line-height: 20px;\n  background-color: white;\n  padding: 10px;\n  color: red;\n  form { color: black; }\n`;\n\nconst CloseButton = styled.img`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  margin-left: 20px;\n`;\n\nconst ModalContainer = ({\n  children, isOpen, setOpen, header,\n}) => (\n  <Modal\n    open={isOpen}\n    center\n    onClose={() => setOpen(false)}\n    closeOnOverlayClick\n    closeOnEsc\n    showCloseIcon={false}\n    focusTrapped={false}\n    styles={{\n      modal: {\n        padding: 0,\n        width: '500px',\n      },\n    }}\n  >\n    <ModalHeader>\n      {header}\n      <CloseButton src={CrossSvg} onClick={() => setOpen(false)} />\n    </ModalHeader>\n    <ModalContent>\n      {children}\n    </ModalContent>\n  </Modal>\n);\n\nModalContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  header: PropTypes.string.isRequired,\n};\n\nexport default ModalContainer;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport LogoSvg from '../assets/logo.svg';\nimport AdminSvg from '../assets/admin.svg';\nimport ModalContainer from './ModalContainer';\n\nconst Container = styled.div`\n  width: calc(100% - 40px);\n  height: 60px;\n  position: sticky;\n  background-color: aquamarine;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  \n  img {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nconst Logo = styled.div`\n  text-decoration: none;\n  color: black;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n`;\n\nconst Login = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  input {\n    width: 100%;\n    margin-top: 10px;\n  }\n  margin: 20px 0;\n`;\n\nconst Error = styled.div`\n  color: red;\n  width: 100%;\n`;\n\nconst emptyErrors = {\n  username: '',\n  password: '',\n};\n\nconst NavBar = ({ loggedIn, logOut, logIn }) => {\n  const [isOpen, setOpen] = useState(false);\n  const [error, setError] = useState(emptyErrors);\n\n  const handleAdminClick = () => {\n    setError('');\n    if (loggedIn) {\n      logOut();\n      return;\n    }\n    setOpen(true);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(emptyErrors);\n    const data = new FormData();\n    data.set('username', event.target.login.value);\n    data.set('password', event.target.password.value);\n    axios.post('/login?developer=Cherkasik', data).then((result) => {\n      if (result.data.status === 'error') {\n        setError(result.data.message);\n        return;\n      }\n      logIn(result.data.message.token);\n      setOpen(false);\n    });\n  };\n\n  return (\n    <Container>\n      <Logo to=\"/\">\n        <img src={LogoSvg} alt=\"\" />\n        Problem Book\n      </Logo>\n      <Login onClick={handleAdminClick}>\n        {loggedIn ? 'Switch to user' : 'Switch to admin'}\n        <img src={AdminSvg} alt=\"\" />\n      </Login>\n      <ModalContainer\n        isOpen={isOpen}\n        setOpen={setOpen}\n        header=\"Log in as admin\"\n      >\n        <form onSubmit={handleSubmit}>\n          <Label>\n            Login\n            <Error>{error.username}</Error>\n            <input\n              name=\"login\"\n            />\n          </Label>\n          <Label>\n            Password\n            <Error>{error.password}</Error>\n            <input\n              name=\"password\"\n            />\n          </Label>\n          <button type=\"submit\">Login</button>\n        </form>\n      </ModalContainer>\n    </Container>\n  );\n};\n\nNavBar.propTypes = {\n  loggedIn: PropTypes.bool.isRequired,\n  logOut: PropTypes.func.isRequired,\n  logIn: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/down-arrow.20d70776.svg\";","export default __webpack_public_path__ + \"static/media/plus.2a3feb59.svg\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport ArrowSvg from '../assets/down-arrow.svg';\nimport PlusSvg from '../assets/plus.svg';\nimport ModalContainer from './ModalContainer';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  height: calc(100% - 80px);\n  margin: auto;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  font-size: 40px;\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  p {\n    margin: 0;\n  }\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n`;\n\nconst Plus = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nconst Arrow = styled.img`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  ${(props) => props.rotateArrow && 'transform: rotate(180deg);'}\n  transition: transform 0.3s ease;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  input {\n    width: 100%;\n    margin-top: 10px;\n  }\n  margin: 20px 0;\n`;\n\nconst Error = styled.div`\n  color: red;\n  width: 100%;\n`;\n\nconst Select = styled.select`\n  margin-right: 10px;\n  height: 20px;\n  width: 100px;\n`;\n\nconst emptyErrors = {\n  username: '',\n  email: '',\n  text: '',\n};\n\nconst Layout = ({\n  children, changeSortDirection, rotateArrow, getTasks, sortField, setSortField,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [error, setError] = useState(emptyErrors);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(emptyErrors);\n    const data = new FormData();\n    data.set('username', event.target.username.value);\n    data.set('email', event.target.email.value);\n    data.set('text', event.target.text.value);\n    axios.post('/create?developer=Cherkasik', data).then((result) => {\n      if (result.data.status === 'error') {\n        setError(result.data.message);\n        return;\n      }\n      getTasks();\n      setOpen(false);\n    });\n  };\n\n  return (\n    <Container>\n      <Header>\n        <p>Task list</p>\n        <div>\n          <Select\n            value={sortField}\n            onChange={(event) => setSortField(event.target.value)}\n          >\n            <option value=\"id\">id</option>\n            <option value=\"username\">username</option>\n            <option value=\"email\">email</option>\n            <option value=\"status\">status</option>\n          </Select>\n          <Arrow\n            rotateArrow={rotateArrow}\n            onClick={changeSortDirection}\n            src={ArrowSvg}\n          />\n          <Plus\n            onClick={() => {\n              setError(emptyErrors);\n              setOpen(true);\n            }}\n            src={PlusSvg}\n          />\n          <ModalContainer setOpen={setOpen} isOpen={isOpen} header=\"Create task\">\n            <form onSubmit={handleSubmit}>\n              <Label>\n                Username\n                <Error>{error.username}</Error>\n                <input name=\"username\" />\n              </Label>\n              <Label>\n                Email\n                <Error>{error.email}</Error>\n                <input name=\"email\" />\n              </Label>\n              <Label>\n                Text\n                <Error>{error.text}</Error>\n                <input name=\"text\" />\n              </Label>\n              <button type=\"submit\">Save</button>\n            </form>\n          </ModalContainer>\n        </div>\n      </Header>\n      <Content>\n        {children}\n      </Content>\n    </Container>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  changeSortDirection: PropTypes.func.isRequired,\n  rotateArrow: PropTypes.bool.isRequired,\n  getTasks: PropTypes.func.isRequired,\n  sortField: PropTypes.string.isRequired,\n  setSortField: PropTypes.func.isRequired,\n};\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/edit.3a5b0553.svg\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport EditSvg from '../assets/edit.svg';\nimport ModalContainer from './ModalContainer';\n\nconst Container = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 260px;\n  width: 100%;\n  margin: 10px;\n  padding: 20px;\n  border: 1px solid black;\n  ${(props) => props.done && `\n    background-color: green;\n    color: white;\n  `}\n`;\n\nconst Header = styled.div`\n  max-height: 100px;\n  min-height: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  line-height: 20px;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  min-height: 200px;\n  margin-top: 20px;\n`;\n\nconst User = styled.div`\n  p {\n    width: 100%;\n    margin: 0;\n  }\n`;\n\nconst Status = styled.div`\n  p {\n    width: 100%;\n    margin: 0;\n  }\n`;\n\nconst Edit = styled.img`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  input {\n    width: 100%;\n    margin-top: 10px;\n  }\n  margin: 20px 0;\n`;\n\nconst Error = styled.div`\n  color: red;\n  width: 100%;\n`;\n\nconst emptyError = {\n  text: '',\n  status: '',\n};\n\nconst TaskCard = ({\n  name, email, text, status, isLoggedIn, updateCard, getTasks,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [error, setError] = useState(emptyError);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(emptyError);\n    const request = updateCard(event.target.text.value, event.target.status.value);\n    if (request) {\n      request.then((result) => {\n        if (result.data.status === 'ok') {\n          getTasks();\n          setOpen(false);\n        }\n      });\n    }\n  };\n\n  return (\n    <Container done={status >= 10}>\n      <Header>\n        <User>\n          <p>{name}</p>\n          <p>{email}</p>\n        </User>\n        <Status>\n          <p>{status}</p>\n          {isLoggedIn && (\n            <>\n              <Edit\n                src={EditSvg}\n                onClick={() => {\n                  setError(emptyError);\n                  setOpen(true);\n                }}\n              />\n              <ModalContainer setOpen={setOpen} isOpen={isOpen} header=\"Create task\">\n                <form onSubmit={handleSubmit}>\n                  <Label>\n                    Text\n                    <Error>{error.text}</Error>\n                    <input defaultValue={text} name=\"text\" />\n                  </Label>\n                  <Label>\n                    Status\n                    <Error>{error.status}</Error>\n                    <select defaultValue={status} name=\"status\">\n                      <option value=\"0\">Task not done</option>\n                      <option value=\"1\">Task not done, edited</option>\n                      <option value=\"10\">Task done</option>\n                      <option value=\"11\">Task done, edited</option>\n                    </select>\n                  </Label>\n                  <button type=\"submit\">Save</button>\n                </form>\n              </ModalContainer>\n            </>\n          )}\n        </Status>\n      </Header>\n      <Content>\n        {text}\n      </Content>\n    </Container>\n  );\n};\n\nTaskCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  status: PropTypes.number.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  updateCard: PropTypes.func.isRequired,\n  getTasks: PropTypes.func.isRequired,\n};\n\nexport default TaskCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst Pages = ({ pageNumber, currentPage, onChange }) => {\n  if (pageNumber === 0) return null;\n  return (\n    <Container>\n      {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n      <select value={currentPage} onChange={onChange}>\n        {Array.from(Array(pageNumber).keys()).map((number) => (\n          <option key={number} value={number + 1}>{number + 1}</option>\n        ))}\n      </select>\n    </Container>\n  );\n};\n\nPages.propTypes = {\n  pageNumber: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Pages;\n","import React, { useEffect, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport axios from 'axios';\nimport NavBar from './components/NavBar';\nimport Layout from './components/Layout';\nimport TaskCard from './components/TaskCard';\nimport Pages from './components/Pages';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [tasks, setTasks] = useState({});\n  const [sortDirection, setSortDirection] = useState(true);\n  const [sortField, setSortField] = useState('id');\n  const [page, setPage] = useState(1);\n\n  const getTasks = () => {\n    axios.get(`/?developer=Cherkasik&sort_direction=${sortDirection ? 'asc' : 'desc'}&page=${page}&sort_field=${sortField}`)\n      .then((x) => setTasks(x.data.message));\n  };\n\n  const checkIfTokenExpired = () => {\n    const expireDate = new Date(localStorage.getItem('expireDate'));\n    return expireDate <= new Date();\n  };\n\n  useEffect(() => {\n    axios.defaults.baseURL = 'https://uxcandy.com/~shapoval/test-task-backend/v2';\n    if (localStorage.getItem('token')) {\n      if (checkIfTokenExpired()) {\n        localStorage.clear();\n        setLoggedIn(false);\n        return;\n      }\n      setLoggedIn(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTasks();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortDirection, page, sortField]);\n\n  const logIn = (token) => {\n    const date = new Date();\n    date.setDate(date.getDate() + 1);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expireDate', date.toString());\n    setLoggedIn(true);\n  };\n\n  const logOut = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n  };\n\n  const changeSortDirection = () => setSortDirection(!sortDirection);\n\n  const sendUpdateRequest = (id, text, status) => {\n    if (checkIfTokenExpired()) {\n      setLoggedIn(false);\n      return null;\n    }\n    const data = new FormData();\n    data.set('token', localStorage.getItem('token'));\n    data.set('text', text);\n    data.set('status', status);\n    return axios.post(`/edit/${id}?developer=Cherkasik`, data);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <NavBar loggedIn={loggedIn} logOut={logOut} logIn={logIn} />\n      <Layout\n        changeSortDirection={changeSortDirection}\n        rotateArrow={sortDirection}\n        getTasks={() => {\n          setPage(1);\n          getTasks();\n        }}\n        sortField={sortField}\n        setSortField={setSortField}\n      >\n        {tasks.tasks?.map((task) => (\n          <TaskCard\n            key={task.id}\n            isLoggedIn={loggedIn}\n            name={task.username}\n            email={task.email}\n            status={task.status}\n            text={task.text}\n            updateCard={(text, status) => sendUpdateRequest(task.id, text, status)}\n            getTasks={getTasks}\n          />\n        ))}\n        <Pages\n          pageNumber={Math.ceil(tasks.total_task_count / 3) || 0}\n          currentPage={page}\n          onChange={(event) => setPage(parseInt(event.target.value, 10))}\n        />\n      </Layout>\n    </>\n  );\n}\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    height: 100%;\n    width: 100%;\n  }\n  body {\n    margin: 0;\n  }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}