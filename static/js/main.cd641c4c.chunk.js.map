{"version":3,"sources":["assets/logo.svg","assets/admin.svg","assets/cross.svg","components/ModalContainer.jsx","components/FormField.jsx","requests.js","components/NavBar.jsx","assets/down-arrow.svg","assets/plus.svg","components/Layout.jsx","assets/edit.svg","components/TaskCard.jsx","components/Pages.jsx","App.jsx","index.jsx"],"names":["ModalHeader","styled","div","ModalContent","CloseButton","img","ModalContainer","children","isOpen","setOpen","header","open","center","onClose","closeOnOverlayClick","closeOnEsc","showCloseIcon","focusTrapped","styles","modal","padding","width","src","CrossSvg","onClick","Label","label","Error","FormField","name","error","defaultValue","type","toLowerCase","defaultProps","axios","defaults","baseURL","Container","Logo","Login","button","emptyErrors","username","password","NavBar","loggedIn","logOut","logIn","useState","setError","to","LogoSvg","alt","AdminSvg","onSubmit","event","preventDefault","login","callback","data","FormData","set","post","then","loginRequest","target","value","result","status","message","token","Header","Content","Plus","Arrow","props","rotateArrow","Select","select","email","text","Layout","changeSortDirection","getTasks","sortField","setSortField","onChange","ArrowSvg","PlusSvg","createTaskRequest","form","done","User","Status","Edit","emptyError","TaskCard","isLoggedIn","updateCard","isEdited","isDone","Math","floor","EditSvg","newText","newStatus","parseInt","request","Pages","pageNumber","currentPage","Array","from","keys","map","number","GlobalStyle","createGlobalStyle","App","setLoggedIn","tasks","setTasks","sortDirection","setSortDirection","page","setPage","get","getTasksRequest","x","checkIfTokenExpired","Date","localStorage","getItem","useEffect","clear","sendUpdateRequest","id","updateTaskRequest","date","setDate","getDate","setItem","toString","task","ceil","total_task_count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd641c4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.47644d92.svg\";","export default __webpack_public_path__ + \"static/media/admin.9385f271.svg\";","export default __webpack_public_path__ + \"static/media/cross.47eb640c.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'react-responsive-modal';\nimport 'react-responsive-modal/styles.css';\nimport styled from 'styled-components';\nimport CrossSvg from '../assets/cross.svg';\n\nconst ModalHeader = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  justify-content: space-between;\n  line-height: 20px;\n  background-color: aquamarine;\n  padding: 10px;\n`;\n\nconst ModalContent = styled.div`\n  width: calc(100% - 20px);\n  line-height: 20px;\n  background-color: white;\n  padding: 10px;\n  color: red;\n  form { color: black; }\n`;\n\nconst CloseButton = styled.img`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  margin-left: 20px;\n`;\n\nconst ModalContainer = ({\n  children, isOpen, setOpen, header,\n}) => (\n  <Modal\n    open={isOpen}\n    center\n    onClose={() => setOpen(false)}\n    closeOnOverlayClick\n    closeOnEsc\n    showCloseIcon={false}\n    focusTrapped={false}\n    styles={{\n      modal: {\n        padding: 0,\n        width: '500px',\n      },\n    }}\n  >\n    <ModalHeader>\n      {header}\n      <CloseButton src={CrossSvg} onClick={() => setOpen(false)} />\n    </ModalHeader>\n    <ModalContent>\n      {children}\n    </ModalContent>\n  </Modal>\n);\n\nModalContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  header: PropTypes.string.isRequired,\n};\n\nexport default ModalContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  input {\n    width: 100%;\n    margin-top: 10px;\n  }\n  margin: 20px 0;\n`;\n\nconst Error = styled.div`\n  color: red;\n  width: 100%;\n`;\n\nconst FormField = ({\n  name, error, defaultValue, type, children,\n}) => {\n  if (type === 'select') {\n    return (\n      <Label>\n        {name}\n        <Error>{error}</Error>\n        {children}\n      </Label>\n    );\n  }\n  return (\n    <Label>\n      {name}\n      <Error>{error}</Error>\n      <input defaultValue={defaultValue} name={name.toLowerCase()} />\n    </Label>\n  );\n};\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  defaultValue: PropTypes.string,\n  type: PropTypes.string,\n  children: PropTypes.node,\n};\n\nFormField.defaultProps = {\n  error: '',\n  defaultValue: '',\n  type: 'input',\n  children: null,\n};\n\nexport default FormField;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://uxcandy.com/~shapoval/test-task-backend/v2';\n\nexport const getTasksRequest = (sortDirection, page, sortField) => axios\n  .get(`/?developer=Cherkasik&sort_direction=${sortDirection ? 'asc' : 'desc'}&page=${page}&sort_field=${sortField}`);\n\nexport const updateTaskRequest = (id, text, status) => {\n  const data = new FormData();\n  data.set('token', localStorage.getItem('token'));\n  data.set('text', text);\n  data.set('status', status);\n  return axios.post(`/edit/${id}?developer=Cherkasik`, data);\n};\n\nexport const createTaskRequest = (username, email, text, callback) => {\n  const data = new FormData();\n  data.set('username', username);\n  data.set('email', email);\n  data.set('text', text);\n  axios.post('/create?developer=Cherkasik', data).then(callback);\n};\n\nexport const loginRequest = (login, password, callback) => {\n  const data = new FormData();\n  data.set('username', login);\n  data.set('password', password);\n  axios.post('/login?developer=Cherkasik', data).then(callback);\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport LogoSvg from '../assets/logo.svg';\nimport AdminSvg from '../assets/admin.svg';\nimport ModalContainer from './ModalContainer';\nimport FormField from './FormField';\nimport { loginRequest } from '../requests';\n\nconst Container = styled.div`\n  width: calc(100% - 40px);\n  height: 60px;\n  position: sticky;\n  background-color: aquamarine;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  \n  img {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nconst Logo = styled.div`\n  text-decoration: none;\n  color: black;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n`;\n\nconst Login = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst emptyErrors = {\n  username: '',\n  password: '',\n};\n\nconst NavBar = ({ loggedIn, logOut, logIn }) => {\n  const [isOpen, setOpen] = useState(false);\n  const [error, setError] = useState(emptyErrors);\n\n  const handleAdminClick = () => {\n    setError('');\n    if (loggedIn) {\n      logOut();\n      return;\n    }\n    setOpen(true);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(emptyErrors);\n    loginRequest(\n      event.target.login.value,\n      event.target.password.value,\n      (result) => {\n        if (result.data.status === 'error') {\n          setError(result.data.message);\n          return;\n        }\n        logIn(result.data.message.token);\n        setOpen(false);\n      },\n    );\n  };\n\n  return (\n    <Container>\n      <Logo to=\"/\">\n        <img src={LogoSvg} alt=\"\" />\n        Problem Book\n      </Logo>\n      <Login onClick={handleAdminClick}>\n        {loggedIn ? 'Switch to user' : 'Switch to admin'}\n        <img src={AdminSvg} alt=\"\" />\n      </Login>\n      <ModalContainer\n        isOpen={isOpen}\n        setOpen={setOpen}\n        header=\"Log in as admin\"\n      >\n        <form onSubmit={handleSubmit}>\n          <FormField name=\"Login\" error={error.username} />\n          <FormField name=\"Password\" error={error.password} />\n          <button type=\"submit\">Login</button>\n        </form>\n      </ModalContainer>\n    </Container>\n  );\n};\n\nNavBar.propTypes = {\n  loggedIn: PropTypes.bool.isRequired,\n  logOut: PropTypes.func.isRequired,\n  logIn: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/down-arrow.20d70776.svg\";","export default __webpack_public_path__ + \"static/media/plus.2a3feb59.svg\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ArrowSvg from '../assets/down-arrow.svg';\nimport PlusSvg from '../assets/plus.svg';\nimport ModalContainer from './ModalContainer';\nimport { createTaskRequest } from '../requests';\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  height: calc(100% - 80px);\n  margin: auto;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  font-size: 40px;\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  p {\n    margin: 0;\n  }\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n`;\n\nconst Plus = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nconst Arrow = styled.img`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  ${(props) => props.rotateArrow && 'transform: rotate(180deg);'}\n  transition: transform 0.3s ease;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  input {\n    width: 100%;\n    margin-top: 10px;\n  }\n  margin: 20px 0;\n`;\n\nconst Error = styled.div`\n  color: red;\n  width: 100%;\n`;\n\nconst Select = styled.select`\n  margin-right: 10px;\n  height: 20px;\n  width: 100px;\n`;\n\nconst emptyErrors = {\n  username: '',\n  email: '',\n  text: '',\n};\n\nconst Layout = ({\n  children, changeSortDirection, rotateArrow, getTasks, sortField, setSortField,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [error, setError] = useState(emptyErrors);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(emptyErrors);\n    createTaskRequest(\n      event.target.username.value,\n      event.target.email.value,\n      event.target.text.value,\n      (result) => {\n        if (result.data.status === 'error') {\n          setError(result.data.message);\n          return;\n        }\n        getTasks();\n        setOpen(false);\n      },\n    );\n  };\n\n  return (\n    <Container>\n      <Header>\n        <p>Task list</p>\n        <div>\n          <Select\n            value={sortField}\n            onChange={(event) => setSortField(event.target.value)}\n          >\n            <option value=\"id\">id</option>\n            <option value=\"username\">username</option>\n            <option value=\"email\">email</option>\n            <option value=\"status\">status</option>\n          </Select>\n          <Arrow\n            rotateArrow={rotateArrow}\n            onClick={changeSortDirection}\n            src={ArrowSvg}\n          />\n          <Plus\n            onClick={() => {\n              setError(emptyErrors);\n              setOpen(true);\n            }}\n            src={PlusSvg}\n          />\n          <ModalContainer setOpen={setOpen} isOpen={isOpen} header=\"Create task\">\n            <form onSubmit={handleSubmit}>\n              <Label>\n                Username\n                <Error>{error.username}</Error>\n                <input name=\"username\" />\n              </Label>\n              <Label>\n                Email\n                <Error>{error.email}</Error>\n                <input name=\"email\" />\n              </Label>\n              <Label>\n                Text\n                <Error>{error.text}</Error>\n                <input name=\"text\" />\n              </Label>\n              <button type=\"submit\">Save</button>\n            </form>\n          </ModalContainer>\n        </div>\n      </Header>\n      <Content>\n        {children}\n      </Content>\n    </Container>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  changeSortDirection: PropTypes.func.isRequired,\n  rotateArrow: PropTypes.bool.isRequired,\n  getTasks: PropTypes.func.isRequired,\n  sortField: PropTypes.string.isRequired,\n  setSortField: PropTypes.func.isRequired,\n};\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/edit.3a5b0553.svg\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport EditSvg from '../assets/edit.svg';\nimport ModalContainer from './ModalContainer';\nimport FormField from './FormField';\n\nconst Container = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 260px;\n  width: 100%;\n  margin: 10px;\n  padding: 20px;\n  border: 1px solid black;\n  ${(props) => props.done && `\n    background-color: green;\n    color: white;\n  `}\n`;\n\nconst Header = styled.div`\n  max-height: 100px;\n  min-height: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  line-height: 20px;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  min-height: 200px;\n  margin-top: 20px;\n`;\n\nconst User = styled.div`\n  p {\n    width: 100%;\n    margin: 0;\n  }\n`;\n\nconst Status = styled.div`\n  p {\n    width: 100%;\n    margin: 0;\n  }\n`;\n\nconst Edit = styled.img`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst emptyError = {\n  text: '',\n  status: '',\n};\n\nconst TaskCard = ({\n  name, email, text, status, isLoggedIn, updateCard, getTasks,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const [error, setError] = useState(emptyError);\n  const isEdited = status % 10 === 1;\n  const isDone = Math.floor(status / 10) === 1;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setError(emptyError);\n    const newText = event.target.text.value;\n    let newStatus = parseInt(event.target.status.value, 10) * 10;\n    if (newText !== text || isEdited) {\n      newStatus += 1;\n    }\n    const request = updateCard(newText, newStatus);\n    if (request) {\n      request.then((result) => {\n        if (result.data.status === 'ok') {\n          getTasks();\n          setOpen(false);\n        }\n      });\n    }\n  };\n\n  return (\n    <Container done={isDone}>\n      <Header>\n        <User>\n          <p>{name}</p>\n          <p>{email}</p>\n        </User>\n        <Status>\n          <p>{isEdited ? 'Edited' : ''}</p>\n          {isLoggedIn && (\n            <>\n              <Edit\n                src={EditSvg}\n                onClick={() => {\n                  setError(emptyError);\n                  setOpen(true);\n                }}\n              />\n              <ModalContainer setOpen={setOpen} isOpen={isOpen} header=\"Create task\">\n                <form onSubmit={handleSubmit}>\n                  <FormField name=\"Text\" error={error.text} defaultValue={text} />\n                  <FormField name=\"Status\" error={error.status} type=\"select\">\n                    <select defaultValue={isDone ? 1 : 0} name=\"status\">\n                      <option value=\"0\">Task not done</option>\n                      <option value=\"1\">Task done</option>\n                    </select>\n                  </FormField>\n                  <button type=\"submit\">Save</button>\n                </form>\n              </ModalContainer>\n            </>\n          )}\n        </Status>\n      </Header>\n      <Content>\n        {text}\n      </Content>\n    </Container>\n  );\n};\n\nTaskCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  status: PropTypes.number.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  updateCard: PropTypes.func.isRequired,\n  getTasks: PropTypes.func.isRequired,\n};\n\nexport default TaskCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst Pages = ({ pageNumber, currentPage, onChange }) => {\n  if (pageNumber === 0) return null;\n  return (\n    <Container>\n      {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n      <select value={currentPage} onChange={onChange}>\n        {Array.from(Array(pageNumber).keys()).map((number) => (\n          <option key={number} value={number + 1}>{number + 1}</option>\n        ))}\n      </select>\n    </Container>\n  );\n};\n\nPages.propTypes = {\n  pageNumber: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Pages;\n","import React, { useEffect, useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport NavBar from './components/NavBar';\nimport Layout from './components/Layout';\nimport TaskCard from './components/TaskCard';\nimport Pages from './components/Pages';\nimport { getTasksRequest, updateTaskRequest } from './requests';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [tasks, setTasks] = useState({});\n  const [sortDirection, setSortDirection] = useState(true);\n  const [sortField, setSortField] = useState('id');\n  const [page, setPage] = useState(1);\n\n  const getTasks = () => {\n    setPage(1);\n    getTasksRequest(sortDirection, page, sortField)\n      .then((x) => setTasks(x.data.message));\n  };\n\n  const checkIfTokenExpired = () => {\n    const expireDate = new Date(localStorage.getItem('expireDate'));\n    return expireDate <= new Date();\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      if (checkIfTokenExpired()) {\n        localStorage.clear();\n        setLoggedIn(false);\n        return;\n      }\n      setLoggedIn(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTasks();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortDirection, page, sortField]);\n\n  const logIn = (token) => {\n    const date = new Date();\n    date.setDate(date.getDate() + 1);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expireDate', date.toString());\n    setLoggedIn(true);\n  };\n\n  const logOut = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n  };\n\n  const changeSortDirection = () => setSortDirection(!sortDirection);\n\n  const sendUpdateRequest = (id, text, status) => {\n    if (checkIfTokenExpired()) {\n      setLoggedIn(false);\n      return null;\n    }\n    return updateTaskRequest(id, text, status);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <NavBar loggedIn={loggedIn} logOut={logOut} logIn={logIn} />\n      <Layout\n        changeSortDirection={changeSortDirection}\n        rotateArrow={sortDirection}\n        getTasks={() => getTasks()}\n        sortField={sortField}\n        setSortField={setSortField}\n      >\n        {tasks.tasks?.map((task) => (\n          <TaskCard\n            key={task.id}\n            isLoggedIn={loggedIn}\n            name={task.username}\n            email={task.email}\n            status={task.status}\n            text={task.text}\n            updateCard={(text, status) => sendUpdateRequest(task.id, text, status)}\n            getTasks={getTasks}\n          />\n        ))}\n        <Pages\n          pageNumber={Math.ceil(tasks.total_task_count / 3) || 0}\n          currentPage={page}\n          onChange={(event) => setPage(parseInt(event.target.value, 10))}\n        />\n      </Layout>\n    </>\n  );\n}\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    height: 100%;\n    width: 100%;\n  }\n  body {\n    margin: 0;\n  }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}